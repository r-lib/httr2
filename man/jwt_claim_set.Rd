% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jwt.R
\name{jwt_claim_set}
\alias{jwt_claim_set}
\alias{jwt_sign_rs256}
\title{Create and sign a JWT}
\usage{
jwt_claim_set(
  iss = NULL,
  sub = NULL,
  aud = NULL,
  exp = unix_time() + 5L * 60L,
  nbf = unix_time(),
  iat = unix_time(),
  jti = NULL,
  ...
)

jwt_sign_rs256(claim_set, private_key, extra_headers = list())
}
\arguments{
\item{iss}{Issuer claim. Identifies the principal that issued the JWT.}

\item{sub}{Subject claim. Identifies the principal that is the subject of
the JWT (i.e. the entity that the claims apply to).}

\item{aud}{Audience claim. Identifies the recipients that the JWT is
intended. Each principle intended to process the JWT must be identifid
with a unique value.}

\item{exp}{Expiration claim. Identifies the expiration time on or after which
the JWT MUST NOT be accepted for processing. Defaults to 5 minutes.}

\item{nbf}{Not before claim. Identifies the time before which the JWT
MUST NOT be accepted for processing. Defaults to current time.}

\item{iat}{Issued at claim. Identifies the time at which the JWT was
issued.  Defaults to current time.}

\item{jti}{JWT ID claim. Provides a unique identifier for the JWT.
If omitted, uses a random 32-byte sequence encoded with base64url.}

\item{...}{Any additional claims to include in the claim set.}

\item{claim_set}{Claim set produced by \code{jwt_claim_set()}}

\item{private_key}{Private key either specficied as a path to a file,
a connection, or a string (PEM/SSH format), or a raw vector (DER format).}

\item{extra_headers}{Any additional fields to include in the JWT header.}
}
\description{
\code{jwt_claim_set()} creates a JWT claim set as defined by
\href{https://datatracker.ietf.org/doc/html/rfc7519}{rfc7519}.
\code{jwt_sign_rs256()} signs a claim set with the RS256 algorithm (used by both
Google and Azure), producing a JWT. These functions are used by
\code{\link[=req_oauth_jwt]{req_oauth_jwt()}} and \code{\link[=oauth_client_req_auth_jwt_rs256]{oauth_client_req_auth_jwt_rs256()}}.
}
