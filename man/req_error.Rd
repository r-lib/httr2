% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/req-error.R
\name{req_error}
\alias{req_error}
\title{Control handling of HTTP errors}
\usage{
req_error(req, is_error = NULL, info = NULL)
}
\arguments{
\item{req}{A \link{request}.}

\item{is_error}{A predicate function that takes a single argument (the
response) and returns \code{TRUE} or \code{FALSE} indicating whether or not an
R error should signalled.}

\item{info}{A callback function that takes a single argument (the response)
and returns a character vector of additional information about the error.
This vector is passed along to the \code{message} argument of \code{\link[rlang:abort]{rlang::abort()}}
so you can use any formatting that it supports.}
}
\value{
An HTTP \link{request}.
}
\description{
\code{req_perform()} will automatically convert HTTP errors (i.e. any 4xx or 5xx
status code) into R errors. Use \code{req_perform()} to either override the
defaults, or extract additional information from the response that would
be useful to expose to the user.
}
\seealso{
\code{\link[=req_retry]{req_retry()}} to control when errors are automatically retried.
}
