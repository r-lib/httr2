% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paginate.R
\name{paginate_req_perform}
\alias{paginate_req_perform}
\alias{paginate_next_request}
\title{Perform a paginated request}
\usage{
paginate_req_perform(req, max_pages = 20L, progress = TRUE)

paginate_next_request(resp, req, parsed)
}
\arguments{
\item{req}{A \link{request}.}

\item{max_pages}{The maximum number of pages to request.}

\item{progress}{Display a progress bar?}

\item{resp}{An HTTP \link{response}.}

\item{parsed}{The response parsed by the argument \code{parse_resp} of \code{\link[=req_paginate]{req_paginate()}}.}
}
\value{
A list of responses parsed with the \code{parse_resp} argument of
\code{\link[=req_paginate]{req_paginate()}}. If this argument is not specified, it will be a list of responses.
}
\description{
Perform a paginated request
}
\examples{
page_size <- 150

req_pokemon <- request("https://pokeapi.co/api/v2/pokemon") \%>\%
  req_url_query(limit = page_size) \%>\%
  req_paginate_next_url(
    next_url = function(resp, parsed) parsed[["next"]],
    parse_resp = resp_body_json,
    n_pages = function(resp, parsed) {
      total <- parsed$count
      ceiling(total / page_size)
    }
  )

responses <- paginate_req_perform(req_pokemon)
}
