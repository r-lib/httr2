% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/req-perform-stream.R
\name{req_perform_connection}
\alias{req_perform_connection}
\alias{resp_stream_raw}
\alias{resp_stream_lines}
\alias{resp_stream_sse}
\alias{close.httr2_response}
\title{Perform a request and return a streaming connection}
\usage{
req_perform_connection(req, mode = "rb", blocking = TRUE)

resp_stream_raw(resp, kb = 32)

resp_stream_lines(resp, lines = 1)

resp_stream_sse(resp)

\method{close}{httr2_response}(con, ...)
}
\arguments{
\item{req}{A \link{request}.}

\item{mode}{The mode that should be used for opening the connection. Use
\code{"rb"} (the default) for binary, \code{"r"} for text.}

\item{blocking}{When retrieving data, should the connection block and wait
for the desired information or immediately return what it has?}

\item{resp, con}{A httr2 \link{response}.}

\item{kb}{How many kilobytes (1024 bytes) of data to read.}

\item{lines}{How many lines to read}

\item{...}{Not used; included for compatibility with generic.}
}
\description{
Use \code{req_perform_connection()} to perform a request that includes a
connection as the body of the response, then \code{resp_stream_bytes()},
\code{resp_stream_lines()}, or \code{resp_stream_sse()} to retrieve data a chunk at a
timen, and finish by closing the connection with \code{close()}.

This is an alternative interface to \code{\link[=req_perform_stream]{req_perform_stream()}} that returns a
connection that you can pull from data, rather than callbacks that are called
as the data streams in. This is useful if you want to do other work in
between streaming inputs.

When using \code{resp_stream_sse()}, you must call \code{req_perform_connection} with
\code{mode = "r"} or you will get intermittent errors.
}
