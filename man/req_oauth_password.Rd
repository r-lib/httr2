% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/oauth-flow-password.R
\name{req_oauth_password}
\alias{req_oauth_password}
\alias{oauth_flow_password}
\title{OAuth with username and password}
\usage{
req_oauth_password(
  req,
  client,
  username,
  password = NULL,
  scope = NULL,
  token_params = list(),
  cache_disk = FALSE,
  cache_key = username
)

oauth_flow_password(
  client,
  username,
  password = NULL,
  scope = NULL,
  token_params = list()
)
}
\arguments{
\item{req}{A \link{request}.}

\item{client}{An \code{\link[=oauth_client]{oauth_client()}}.}

\item{username}{User name.}

\item{password}{Password. You avoid entering the password directly when
calling this function as it will be captured by \code{.Rhistory}. Instead,
leave it unset and the default behaviour will prompt you for it
interactively.}

\item{scope}{Scopes to be requested from the resource owner.}

\item{token_params}{List containing additional parameters passed to the
\code{token_url}.}

\item{cache_disk}{Should the access token be cached on disk? This reduces
the number of times that you need to re-authenticate at the cost of
storing access credentials on disk.

See the "Caching" section below for more details.}

\item{cache_key}{If you want to cache multiple tokens per app, use this
key to disambiguate them.}
}
\value{
\code{req_oauth_password()} returns a modified HTTP \link{request} that will
use OAuth; \code{oauth_flow_password()} returns an \link{oauth_token}.
}
\description{
This function implements the OAuth \strong{resource owner password flow}, as
defined by \href{https://datatracker.ietf.org/doc/html/rfc6749#section-4.3}{Section 4.3 of RFC 6749}. It allows the user to supply their password
once, exchanging it for an access token that can be cached locally.

Learn more about the overall OAuth authentication flow in \code{vignette("oauth")}.
}
\section{Caching}{
By default, the OAuth token will be cached in memory. That means that you
will only need to authenticate once in the current session, but you will
need to re-authenticate again from scratch if you restart R. In some cases,
you may want to save the token so that it's automatically used across
sessions. This is easy to do (just set \code{cache_disk = TRUE}) but you need to
carefully consider the consequences of saving the user's credentials on disk.

httr2 does the best it can to save these credentials securely. They are
stored in a local cache directory (\code{\link[=oauth_cache_path]{oauth_cache_path()}}) that should only
be accessible to the current user, and are encrypted so they will be hard
for any package other than httr2 to read. However, there's no way to prevent
other R code from using httr2 to access them, so if you do choose to cache
tokens, you should inform the user and give them the ability to opt-out.

You can see which clients have cached tokens by looking in the cache
directory used by httr2:

\if{html}{\out{<div class="sourceCode R">}}\preformatted{dir(oauth_cache_path(), recursive = TRUE)
}\if{html}{\out{</div>}}

httr2 automatically deletes any cached tokens that are older than 30 days
whenever it's loaded. This means that you'll need to re-auth at least once a
month, but prevents tokens for hanging around on disk long after you've
forgotten you created them.
}

\examples{
req_auth <- function(req) {
  req_oauth_password(req,
    client = oauth_client("example", "https://example.com/get_token"),
    username = "username"
  )
}
if (interactive()) {
  request("https://example.com") \%>\%
    req_auth()
}
}
\seealso{
Other OAuth flows: 
\code{\link{req_oauth_auth_code}()},
\code{\link{req_oauth_bearer_jwt}()},
\code{\link{req_oauth_client_credentials}()},
\code{\link{req_oauth_refresh}()}
}
\concept{OAuth flows}
