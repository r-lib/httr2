% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/oauth-app.R
\name{oauth_client_req_auth}
\alias{oauth_client_req_auth}
\alias{oauth_client_req_auth_header}
\alias{oauth_client_req_auth_body}
\alias{oauth_client_req_auth_jwt_rs256}
\title{OAuth client authentication}
\usage{
oauth_client_req_auth(req, app)

oauth_client_req_auth_header(req, client)

oauth_client_req_auth_body(req, client)

oauth_client_req_auth_jwt_rs256(req, client, claims, key)
}
\arguments{
\item{req}{A \link{request}.}

\item{app}{An \link{oauth_app}.}

\item{client}{An \link{oauth_client}.}

\item{claims}{A list of claims passed to \link{jwt_claim_set}.}

\item{key}{Path to private key file used to sign the JWT.}
}
\description{
\code{oauth_client_req_auth()} authenticates a request using the authentication
strategy defined by the \code{auth} and \code{auth_param} arguments to \code{\link[=oauth_app]{oauth_app()}}.
This used to authenticate the client as part of the OAuth flow, \strong{not}
to authenticate a request on behalf of a user.

There are three built-in strategies:
\itemize{
\item \code{oauth_client_req_body()} adds the client id and (optionally) the secret
to the request body, as described in
\href{https://datatracker.ietf.org/doc/html/rfc6749#section-2.3.1}{rfc6749},
Section 2.3.1.
\item \code{oauth_client_req_header()} adds the client id and secret using HTTP
basic authentication with the \code{Authorization} header, as described in
\href{https://datatracker.ietf.org/doc/html/rfc6749#section-2.3.1}{rfc6749},
Section 2.3.1.
\item \code{oauth_client_jwt_rs256()} adds a client assertion to the body using a
JWT signed with \code{jwt_sign_rs256()} using a private key, as described in
\href{https://datatracker.ietf.org/doc/html/rfc7523#section-2.2}{rfc7523},
Section 2.2.
}

You will generally not call these functions directly but will instead
specify them through the \code{auth} argument to \code{\link[=oauth_app]{oauth_app()}}. The \code{req} and
\code{client} parameters are automatically filled in; other parameters come from
the \code{auth_params} argument.
}
